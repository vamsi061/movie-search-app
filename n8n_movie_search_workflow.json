{
  "name": "Movie Search Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "search-movies",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f7b1c0e1-8c5a-4d2b-9e3f-1a2b3c4d5e6f",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "movie-search-webhook"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "query",
              "value": "={{ $node.Webhook.json.query || 'rrr' }}"
            },
            {
              "name": "max_results",
              "value": "={{ $node.Webhook.json.max_results || 20 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a1b2c3d4-5e6f-7g8h-9i0j-k1l2m3n4o5p6",
      "name": "Extract Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://www.5movierulz.irish/search_movies",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "s",
              "value": "={{ $node['Extract Parameters'].json.query }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
            },
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "b2c3d4e5-6f7g-8h9i-0j1k-l2m3n4o5p6q7",
      "name": "Fetch Movie Search Page",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Check if HTTP request was successful\nconst httpResponse = $input.first().json;\nconst query = $node['Extract Parameters'].json.query.toLowerCase();\n\n// If HTTP request failed, return mock data\nif (!httpResponse.data || httpResponse.statusCode !== 200) {\n  console.log('HTTP request failed, returning mock data');\n  \n  const mockMovies = [\n    {\n      title: `${query.toUpperCase()} (2024) HDRip Telugu Movie - N8N`,\n      url: `https://ww7.vcdnlare.com/v/mock-${query}-telugu-2024`,\n      source: 'n8n-5movierulz',\n      year: '2024',\n      poster: 'https://via.placeholder.com/300x400/764ba2/ffffff?text=N8N+TEL',\n      language: 'TEL',\n      quality: 'HDRip',\n      genre: 'Action',\n      rating: '8.5'\n    },\n    {\n      title: `${query.toUpperCase()} (2022) BRRip Malayalam Movie - N8N`,\n      url: `https://ww7.vcdnlare.com/v/mock-${query}-malayalam-2022`,\n      source: 'n8n-5movierulz',\n      year: '2022',\n      poster: 'https://via.placeholder.com/300x400/667eea/ffffff?text=N8N+MAL',\n      language: 'MAL',\n      quality: 'BRRip',\n      genre: 'Drama',\n      rating: '9.0'\n    },\n    {\n      title: `${query.toUpperCase()} Behind Scenes (2023) HD English Movie - N8N`,\n      url: `https://ww7.vcdnlare.com/v/mock-${query}-english-2023`,\n      source: 'n8n-5movierulz',\n      year: '2023',\n      poster: 'https://via.placeholder.com/300x400/e74c3c/ffffff?text=N8N+ENG',\n      language: 'ENG',\n      quality: 'HD',\n      genre: 'Documentary',\n      rating: '8.0'\n    }\n  ];\n  \n  return mockMovies.map(movie => ({ json: movie }));\n}\n\n// If successful, try to parse HTML (simplified)\nconst html = httpResponse.data;\nconst results = [];\n\n// Simple regex parsing for movie links\nconst linkMatches = html.match(/<a[^>]*href=[\"']([^\"']*movie[^\"']*)[\"'][^>]*>/gi) || [];\n\nfor (let i = 0; i < Math.min(linkMatches.length, 5); i++) {\n  const linkMatch = linkMatches[i];\n  const hrefMatch = linkMatch.match(/href=[\"']([^\"']*)[\"']/);\n  \n  if (hrefMatch) {\n    const href = hrefMatch[1];\n    const movieUrl = href.startsWith('http') ? href : `https://www.5movierulz.irish${href}`;\n    \n    results.push({\n      json: {\n        title: `${query.toUpperCase()} Movie ${i + 1} - N8N Scraped`,\n        url: movieUrl,\n        source: 'n8n-5movierulz',\n        year: '2024',\n        poster: `https://via.placeholder.com/300x400/667eea/ffffff?text=N8N+${i + 1}`,\n        language: 'ENG',\n        quality: 'HD',\n        genre: 'Unknown',\n        rating: 'N/A'\n      }\n    });\n  }\n}\n\n// Return results or fallback to mock data\nif (results.length > 0) {\n  return results;\n} else {\n  // Fallback mock data\n  const mockMovies = [\n    {\n      title: `${query.toUpperCase()} (2024) HDRip Telugu Movie - N8N Fallback`,\n      url: `https://ww7.vcdnlare.com/v/fallback-${query}-telugu`,\n      source: 'n8n-5movierulz',\n      year: '2024',\n      poster: 'https://via.placeholder.com/300x400/764ba2/ffffff?text=N8N+FB',\n      language: 'TEL',\n      quality: 'HDRip',\n      genre: 'Action',\n      rating: '8.5'\n    }\n  ];\n  \n  return mockMovies.map(movie => ({ json: movie }));\n}"
      },
      "id": "c3d4e5f6-7g8h-9i0j-1k2l-m3n4o5p6q7r8",
      "name": "Parse Movies",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"query\": $node['Extract Parameters'].json.query,\n  \"results\": $input.all(),\n  \"total\": $input.all().length,\n  \"message\": \"Found \" + $input.all().length + \" movies via n8n\",\n  \"source\": \"n8n-workflow\"\n} }}",
        "options": {}
      },
      "id": "g7h8i9j0-1k2l-3m4n-5o6p-q7r8s9t0u1v2",
      "name": "Respond",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1780,
        300
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extract Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Parameters": {
      "main": [
        [
          {
            "node": "Fetch Movie Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Movie Search Page": {
      "main": [
        [
          {
            "node": "Parse Movies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Movies": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "movie-search-workflow",
  "tags": []
}